@model ClinicManagement1.Models.Customer
@using ClinicManagement1.Models;
@{
    ViewBag.Title = "Edit";
}
@{
    ClinicManagementEntities db = new ClinicManagementEntities();
    int id = 1; /*int.Parse(Request.Cookies["Id"].Value);*/
    var acc = from e in db.Customers
              where e.Id == id
              select e;
}
<div class="container">

    <div class="row">
        <div class="col-lg-3">

            <div class="profile-sidebar mt-5">
                <!-- SIDEBAR USERPIC -->
                <div class="div-img-top">  <img src="~/Assets/images/UploadFile/@acc.FirstOrDefault().Images.FirstOrDefault().FileName" class="img-top" /></div>
                <!-- END SIDEBAR USERPIC -->
                <!-- SIDEBAR USER TITLE -->
                <div class="profile-usertitle">
                    <div class="profile-usertitle-name">
                        @Html.DisplayFor(modelItem => Model.Name)
                    </div>
                </div>
                <!-- END SIDEBAR USER TITLE -->
                <!-- SIDEBAR MENU -->
                <div class="profile-usermenu">
                    <ul>
                        <li>
                            @Html.ActionLink("Account Profile", "Index", new { id = Model.Id })
                            @*<a style="margin-left:5px">Account Profile</a>*@
                        </li>
                        <li class="active">
                            @*<a href="/Customers/Edit">Edit Profile</a>*@
                            @*@Html.ActionLink("Edit Profile", "Edit", new { id = Model.Id })*@
                            <a style="margin-left:5px">Edit Profile</a>
                        </li>
                        <li>
                            <a href="#">Log out</a>
                        </li>
                    </ul>
                </div>
                <!-- END MENU -->
            </div>

        </div>
        <div class="col-lg-9">
            <div class="bg-white-right">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4 class="h2 mt-5 mb-5 text-black">Edit Profile</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @style = "font-size:3rem;border-color: gray;background-color: lightblue;border-radius: 10px;color: black;" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @style = "font-size:3rem;border-color: gray;background-color: lightblue;border-radius: 10px;color: black;" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @style = "font-size:3rem;border-color: gray;background-color: lightblue;border-radius: 10px;color: black;" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = "font-size:3rem;border-color: gray;background-color: lightblue;border-radius: 10px;color: black;" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", @style = "font-size:3rem;border-color: gray;background-color: lightblue;border-radius: 10px;color: black;" } })
                                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @style = "font-size:3rem;border-color: gray;background-color: lightblue;border-radius: 10px;color: black;" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <hr />
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<div class="site-section bg-secondary bg-image" style="background-image: url('/Assets/images/bg_2.jpg');">
    <div class="container">
        <div class="row align-items-stretch">
            <div class="col-lg-6 mb-5 mb-lg-0">
                <a href="#" class="banner-1 h-100 d-flex" style="background-image: url('/Assets/images/bg_1.jpg');">
                    <div class="banner-1-inner align-self-center">
                        <h2>Pharma Products</h2>
                        <p>
                            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestiae ex ad minus rem odio voluptatem.
                        </p>
                    </div>
                </a>
            </div>
            <div class="col-lg-6 mb-5 mb-lg-0">
                <a href="#" class="banner-1 h-100 d-flex" style="background-image: url('/Assets/images/bg_2.jpg');">
                    <div class="banner-1-inner ml-auto  align-self-center">
                        <h2>Rated by Experts</h2>
                        <p>
                            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestiae ex ad minus rem odio voluptatem.
                        </p>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>
<style>
    dd {
        padding: 5px;
        border-color: gray;
        background-color: lightblue;
        border-radius: 10px;
        color: black;
    }

    body {
        background: #F1F3FA;
    }

    /* Profile container */
    .profile {
        margin: 20px 0;
    }

    /* Profile sidebar */
    .profile-sidebar {
        padding: 20px 0 10px 0;
        background: #fff;
    }

    .profile-userpic img {
        float: none;
        margin: 0 auto;
        width: 50%;
        height: 50%;
        -webkit-border-radius: 50% !important;
        -moz-border-radius: 50% !important;
        border-radius: 50% !important;
    }

    .profile-usertitle {
        text-align: center;
        margin-top: 20px;
    }

    .profile-usertitle-name {
        color: #5a7391;
        font-size: 16px;
        font-weight: 600;
        margin-bottom: 7px;
    }

    .profile-usertitle-job {
        text-transform: uppercase;
        color: #5b9bd1;
        font-size: 12px;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .profile-userbuttons {
        text-align: center;
        margin-top: 10px;
    }

        .profile-userbuttons .btn {
            text-transform: uppercase;
            font-size: 11px;
            font-weight: 600;
            padding: 6px 15px;
            margin-right: 5px;
        }

            .profile-userbuttons .btn:last-child {
                margin-right: 0px;
            }

    .profile-usermenu {
        margin-top: 30px;
    }

        .profile-usermenu ul li {
            border-bottom: 1px solid #f0f4f7;
            text-transform: uppercase;
            color: #5b9bd1;
            font-size: 12px;
            font-weight: 600;
            margin-bottom: 15px;
        }

            .profile-usermenu ul li:last-child {
                border-bottom: none;
            }

            .profile-usermenu ul li a {
                color: #93a3b5;
                font-size: 14px;
                font-weight: 400;
                margin-left: 5px;
            }

                .profile-usermenu ul li a i {
                    margin-right: 8px;
                    font-size: 14px;
                }

                .profile-usermenu ul li a:hover {
                    background-color: #fafcfd;
                    color: #5b9bd1;
                }

            .profile-usermenu ul li.active {
                border-bottom: none;
            }

                .profile-usermenu ul li.active a {
                    color: #5b9bd1;
                    background-color: #f6f9fb;
                    border-left: 2px solid #5b9bd1;
                    margin-left: -2px;
                }

    /* Profile Content */
    .profile-content {
        padding: 20px;
        background: #fff;
        height: auto;
    }

    .profile-ava {
        padding: 20px;
        background: #fff;
        height: inherit;
    }

    .div-img-top {
        border-radius: 50%;
        overflow: hidden;
        margin: 10px auto;
        height: 140px;
        width: 60%;
    }

    .img-top {
        width: 100%;
        height: 140px;
    }

    .fileupload-v1-file {
        height: 35px;
        width: 85px;
        margin-left: 50px;
    }

    .div-img-right {
        background-color: red;
        border-radius: 50%;
        overflow: hidden;
        margin-bottom: 10px;
    }

    .img-right {
        width: 100%;
        height: 200px;
    }
    .bg-white-right {
        background-color: #fff;
        padding: 10px 50px 10px;
        height: 700px;
        box-sizing: border-box;
        margin-top:20px;
    }
</style>
